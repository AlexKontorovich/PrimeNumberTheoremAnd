on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  # allow write to manipulate cache
  actions: write

jobs:
  build_blueprint:
    runs-on: ubuntu-latest
    name: Build blueprint
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip' # cache pip dependencies

      - name: Update pip
        run: |
          pip install --upgrade pip

      - name: Install blueprint apt dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz libgraphviz-dev pdf2svg dvisvgm

      - name: Install blueprint dependencies
        run: |
          cd blueprint && pip install -r requirements.txt

      - name: Build blueprint and copy to `docs/blueprint`
        run: |
          make blueprint
          mkdir -p docs
          mv blueprint/web docs/

      - name: Upstreaming dashboard
        run: python3 scripts/upstreaming_dashboard.py

      - name: Clear previously saved blueprint cache
        uses: DareFox/delete-cache-by-key@v1.0.1
        with:
          key: Blueprint-cache2
          mode: exact
        continue-on-error: true

      - name: Save blueprint for future use
        uses: actions/cache/save@v4
        with:
          path: |
            docs/web
          key: Blueprint-cache2

      - name: Restore previous documentation, while we wait for the next one to be generated
        uses: actions/cache/restore@v4
        with:
          path: |
            docs/docs
          key: Documentation-cache
        continue-on-error: true

      # Upload blueprint artifact for the docs job to download
      - name: Upload blueprint artifact for docs job
        uses: actions/upload-artifact@v4
        with:
          name: blueprint-files
          path: docs
          retention-days: 1

  # generate doc after blueprint (as it's quite a bit longer)
  build_docs:
    runs-on: ubuntu-latest
    name: Build docs
    needs: build_blueprint  # Wait for blueprint to complete
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install elan
        run: curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain $(cat lean-toolchain)

      - name: Build project
        run: make LAKEBIN='~/.elan/bin/lake' build

      # Get cached build artifacts first (this is the key optimization!)
      - name: Get build cache
        run: |
          ~/.elan/bin/lake exe cache get || echo "No cache available"
        continue-on-error: true

      - name: Cache mathlib docs
        uses: actions/cache@v4
        with:
          path: |
            .lake/build/doc/Init
            .lake/build/doc/Lake
            .lake/build/doc/Lean
            .lake/build/doc/Std
            .lake/build/doc/Mathlib
            .lake/build/doc/declarations
            !.lake/build/doc/declarations/declaration-data-PrimeNumberTheoremAnd*
          key: MathlibDoc-${{ hashFiles('lake-manifest.json') }}
          restore-keys: |
            MathlibDoc-

      - name: Build documentation
        run: make LAKEBIN='~/.elan/bin/lake' doc

      - name: Copy documentation to `docs/docs`
        run: |
          mkdir -p docs
          cp -r .lake/build/doc docs/docs

      - name: Clear previously saved documentation cache
        uses: DareFox/delete-cache-by-key@v1.0.1
        with:
          key: Documentation-cache
          mode: exact
        continue-on-error: true

      - name: Save documentation for future use
        uses: actions/cache/save@v4
        with:
          path: |
            docs/docs
          key: Documentation-cache

      # Download blueprint files from the previous job
      - name: Download blueprint files
        uses: actions/download-artifact@v4
        with:
          name: blueprint-files
          path: docs

      # Upload combined docs for deployment
      - name: Upload combined docs
        uses: actions/upload-artifact@v4
        with:
          name: combined-docs
          path: docs
          retention-days: 1

  # Separate deployment job that runs after both builds complete
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to GitHub Pages
    needs: build_docs  # Wait for both blueprint and docs to complete
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      # Download the combined docs from the build_docs job
      - name: Download combined docs
        uses: actions/download-artifact@v4
        with:
          name: combined-docs
          path: docs

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
